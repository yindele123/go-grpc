syntax = "proto3";
import "base.proto";
import "category.proto";
option go_package = "./;proto";

service Brands{
  //品牌和轮播图
  rpc BrandList(BrandFilterRequest) returns(BrandListResponse); //批量获取品牌信息
  rpc CreateBrand(BrandRequest) returns(BrandInfoResponse); //新建品牌信息
  rpc DeleteBrand(BrandRequest) returns(Empty); //删除品牌
  rpc UpdateBrand(BrandRequest) returns(Empty); //修改品牌信息

  //品牌分类
  rpc CategoryBrandList(CategoryBrandFilterRequest) returns(CategoryBrandListResponse); //获取轮播列表信息
  //通过category获取brands
  rpc GetCategoryBrandList(CategoryInfoRequest) returns(BrandListResponse);
  rpc CreateCategoryBrand(CategoryBrandRequest) returns(CategoryBrandResponse); //添加banner图
  rpc DeleteCategoryBrand(CategoryBrandRequest) returns(Empty); //删除轮播图
  rpc UpdateCategoryBrand(CategoryBrandRequest) returns(Empty); //修改轮播图
}

message CategoryBrandFilterRequest  {
  int32 pages = 1;
  int32 pagePerNums = 2;
}

message CategoryBrandRequest{
  int32 id = 1;
  int32 categoryId = 2;
  int32 brandId = 3;
}
message CategoryBrandResponse{
  int32 id = 1;
  BrandInfoResponse brand = 2;
  CategoryInfoResponse category = 3;
}



message BrandFilterRequest {
  int32 pages = 1;
  int32 pagePerNums = 2;
}

message BrandRequest {
  int32 id = 1;
  string name = 2;
  string logo = 3;
}

message BrandInfoResponse {
  int32 id = 1;
  string name = 2;
  string logo = 3;
}

message BrandListResponse {
  int32 total = 1;
  repeated BrandInfoResponse data = 2;
}



message CategoryBrandListResponse {
  int32 total = 1;
  repeated CategoryBrandResponse data = 2;
}