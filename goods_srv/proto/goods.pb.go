// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.13.0
// source: goods.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueryCategoryRequest) Reset() {
	*x = QueryCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCategoryRequest) ProtoMessage() {}

func (x *QueryCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCategoryRequest.ProtoReflect.Descriptor instead.
func (*QueryCategoryRequest) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{0}
}

func (x *QueryCategoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages       int32 `protobuf:"varint,1,opt,name=pages,proto3" json:"pages,omitempty"`
	PagePerNums int32 `protobuf:"varint,2,opt,name=pagePerNums,proto3" json:"pagePerNums,omitempty"`
}

func (x *FilterRequest) Reset() {
	*x = FilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRequest) ProtoMessage() {}

func (x *FilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRequest.ProtoReflect.Descriptor instead.
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{1}
}

func (x *FilterRequest) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *FilterRequest) GetPagePerNums() int32 {
	if x != nil {
		return x.PagePerNums
	}
	return 0
}

type BatchGoodsIdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []int32 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *BatchGoodsIdInfo) Reset() {
	*x = BatchGoodsIdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGoodsIdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGoodsIdInfo) ProtoMessage() {}

func (x *BatchGoodsIdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGoodsIdInfo.ProtoReflect.Descriptor instead.
func (*BatchGoodsIdInfo) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{2}
}

func (x *BatchGoodsIdInfo) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteGoodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGoodsInfo) Reset() {
	*x = DeleteGoodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGoodsInfo) ProtoMessage() {}

func (x *DeleteGoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGoodsInfo.ProtoReflect.Descriptor instead.
func (*DeleteGoodsInfo) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteGoodsInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CategoryBriefInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CategoryBriefInfoResponse) Reset() {
	*x = CategoryBriefInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryBriefInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryBriefInfoResponse) ProtoMessage() {}

func (x *CategoryBriefInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryBriefInfoResponse.ProtoReflect.Descriptor instead.
func (*CategoryBriefInfoResponse) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{4}
}

func (x *CategoryBriefInfoResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryBriefInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CategoryFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsTab bool  `protobuf:"varint,2,opt,name=isTab,proto3" json:"isTab,omitempty"`
}

func (x *CategoryFilterRequest) Reset() {
	*x = CategoryFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryFilterRequest) ProtoMessage() {}

func (x *CategoryFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryFilterRequest.ProtoReflect.Descriptor instead.
func (*CategoryFilterRequest) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{5}
}

func (x *CategoryFilterRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryFilterRequest) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

type GoodInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GoodInfoRequest) Reset() {
	*x = GoodInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodInfoRequest) ProtoMessage() {}

func (x *GoodInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodInfoRequest.ProtoReflect.Descriptor instead.
func (*GoodInfoRequest) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{6}
}

func (x *GoodInfoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateGoodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSn         string   `protobuf:"bytes,3,opt,name=goodsSn,proto3" json:"goodsSn,omitempty"`
	Stocks          int32    `protobuf:"varint,7,opt,name=stocks,proto3" json:"stocks,omitempty"` //库存，
	MarketPrice     float32  `protobuf:"fixed32,8,opt,name=marketPrice,proto3" json:"marketPrice,omitempty"`
	ShopPrice       float32  `protobuf:"fixed32,9,opt,name=shopPrice,proto3" json:"shopPrice,omitempty"`
	GoodsBrief      string   `protobuf:"bytes,10,opt,name=goodsBrief,proto3" json:"goodsBrief,omitempty"`
	GoodsDesc       string   `protobuf:"bytes,11,opt,name=goodsDesc,proto3" json:"goodsDesc,omitempty"`
	ShipFree        bool     `protobuf:"varint,12,opt,name=shipFree,proto3" json:"shipFree,omitempty"`
	Images          []string `protobuf:"bytes,13,rep,name=images,proto3" json:"images,omitempty"`
	DescImages      []string `protobuf:"bytes,14,rep,name=descImages,proto3" json:"descImages,omitempty"`
	GoodsFrontImage string   `protobuf:"bytes,15,opt,name=goodsFrontImage,proto3" json:"goodsFrontImage,omitempty"`
	IsNew           bool     `protobuf:"varint,16,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot           bool     `protobuf:"varint,17,opt,name=isHot,proto3" json:"isHot,omitempty"`
	OnSale          bool     `protobuf:"varint,18,opt,name=onSale,proto3" json:"onSale,omitempty"`
	CategoryId      int32    `protobuf:"varint,19,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	BrandId         int32    `protobuf:"varint,20,opt,name=brandId,proto3" json:"brandId,omitempty"`
}

func (x *CreateGoodsInfo) Reset() {
	*x = CreateGoodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodsInfo) ProtoMessage() {}

func (x *CreateGoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodsInfo.ProtoReflect.Descriptor instead.
func (*CreateGoodsInfo) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{7}
}

func (x *CreateGoodsInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateGoodsInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGoodsInfo) GetGoodsSn() string {
	if x != nil {
		return x.GoodsSn
	}
	return ""
}

func (x *CreateGoodsInfo) GetStocks() int32 {
	if x != nil {
		return x.Stocks
	}
	return 0
}

func (x *CreateGoodsInfo) GetMarketPrice() float32 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *CreateGoodsInfo) GetShopPrice() float32 {
	if x != nil {
		return x.ShopPrice
	}
	return 0
}

func (x *CreateGoodsInfo) GetGoodsBrief() string {
	if x != nil {
		return x.GoodsBrief
	}
	return ""
}

func (x *CreateGoodsInfo) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *CreateGoodsInfo) GetShipFree() bool {
	if x != nil {
		return x.ShipFree
	}
	return false
}

func (x *CreateGoodsInfo) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreateGoodsInfo) GetDescImages() []string {
	if x != nil {
		return x.DescImages
	}
	return nil
}

func (x *CreateGoodsInfo) GetGoodsFrontImage() string {
	if x != nil {
		return x.GoodsFrontImage
	}
	return ""
}

func (x *CreateGoodsInfo) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *CreateGoodsInfo) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *CreateGoodsInfo) GetOnSale() bool {
	if x != nil {
		return x.OnSale
	}
	return false
}

func (x *CreateGoodsInfo) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateGoodsInfo) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

type GoodsReduceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId int32 `protobuf:"varint,1,opt,name=GoodsId,proto3" json:"GoodsId,omitempty"`
	Nums    int32 `protobuf:"varint,2,opt,name=nums,proto3" json:"nums,omitempty"`
}

func (x *GoodsReduceRequest) Reset() {
	*x = GoodsReduceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsReduceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsReduceRequest) ProtoMessage() {}

func (x *GoodsReduceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsReduceRequest.ProtoReflect.Descriptor instead.
func (*GoodsReduceRequest) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{8}
}

func (x *GoodsReduceRequest) GetGoodsId() int32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *GoodsReduceRequest) GetNums() int32 {
	if x != nil {
		return x.Nums
	}
	return 0
}

type BatchCategoryInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []int32 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	GoodsNums int32   `protobuf:"varint,2,opt,name=goodsNums,proto3" json:"goodsNums,omitempty"`
	BrandNums int32   `protobuf:"varint,3,opt,name=brandNums,proto3" json:"brandNums,omitempty"`
}

func (x *BatchCategoryInfoRequest) Reset() {
	*x = BatchCategoryInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCategoryInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCategoryInfoRequest) ProtoMessage() {}

func (x *BatchCategoryInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCategoryInfoRequest.ProtoReflect.Descriptor instead.
func (*BatchCategoryInfoRequest) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{9}
}

func (x *BatchCategoryInfoRequest) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BatchCategoryInfoRequest) GetGoodsNums() int32 {
	if x != nil {
		return x.GoodsNums
	}
	return 0
}

func (x *BatchCategoryInfoRequest) GetBrandNums() int32 {
	if x != nil {
		return x.BrandNums
	}
	return 0
}

type GoodsFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceMin    int32  `protobuf:"varint,1,opt,name=priceMin,proto3" json:"priceMin,omitempty"`
	PriceMax    int32  `protobuf:"varint,2,opt,name=priceMax,proto3" json:"priceMax,omitempty"`
	IsHot       bool   `protobuf:"varint,3,opt,name=isHot,proto3" json:"isHot,omitempty"`
	IsNew       bool   `protobuf:"varint,4,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsTab       bool   `protobuf:"varint,5,opt,name=isTab,proto3" json:"isTab,omitempty"`
	TopCategory int32  `protobuf:"varint,6,opt,name=topCategory,proto3" json:"topCategory,omitempty"`
	Pages       int32  `protobuf:"varint,7,opt,name=pages,proto3" json:"pages,omitempty"`
	PagePerNums int32  `protobuf:"varint,8,opt,name=pagePerNums,proto3" json:"pagePerNums,omitempty"`
	KeyWords    string `protobuf:"bytes,9,opt,name=keyWords,proto3" json:"keyWords,omitempty"`
	Brand       int32  `protobuf:"varint,10,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *GoodsFilterRequest) Reset() {
	*x = GoodsFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsFilterRequest) ProtoMessage() {}

func (x *GoodsFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsFilterRequest.ProtoReflect.Descriptor instead.
func (*GoodsFilterRequest) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{10}
}

func (x *GoodsFilterRequest) GetPriceMin() int32 {
	if x != nil {
		return x.PriceMin
	}
	return 0
}

func (x *GoodsFilterRequest) GetPriceMax() int32 {
	if x != nil {
		return x.PriceMax
	}
	return 0
}

func (x *GoodsFilterRequest) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *GoodsFilterRequest) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *GoodsFilterRequest) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

func (x *GoodsFilterRequest) GetTopCategory() int32 {
	if x != nil {
		return x.TopCategory
	}
	return 0
}

func (x *GoodsFilterRequest) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *GoodsFilterRequest) GetPagePerNums() int32 {
	if x != nil {
		return x.PagePerNums
	}
	return 0
}

func (x *GoodsFilterRequest) GetKeyWords() string {
	if x != nil {
		return x.KeyWords
	}
	return ""
}

func (x *GoodsFilterRequest) GetBrand() int32 {
	if x != nil {
		return x.Brand
	}
	return 0
}

type GoodsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId      uint32                     `protobuf:"varint,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Name            string                     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSn         string                     `protobuf:"bytes,4,opt,name=goodsSn,proto3" json:"goodsSn,omitempty"`
	ClickNum        uint32                     `protobuf:"varint,5,opt,name=clickNum,proto3" json:"clickNum,omitempty"`
	SoldNum         uint32                     `protobuf:"varint,6,opt,name=soldNum,proto3" json:"soldNum,omitempty"`
	FavNum          uint32                     `protobuf:"varint,7,opt,name=favNum,proto3" json:"favNum,omitempty"`
	MarketPrice     float32                    `protobuf:"fixed32,9,opt,name=marketPrice,proto3" json:"marketPrice,omitempty"`
	ShopPrice       float32                    `protobuf:"fixed32,10,opt,name=shopPrice,proto3" json:"shopPrice,omitempty"`
	GoodsBrief      string                     `protobuf:"bytes,11,opt,name=goodsBrief,proto3" json:"goodsBrief,omitempty"`
	GoodsDesc       string                     `protobuf:"bytes,12,opt,name=goodsDesc,proto3" json:"goodsDesc,omitempty"`
	ShipFree        bool                       `protobuf:"varint,13,opt,name=shipFree,proto3" json:"shipFree,omitempty"`
	Images          []string                   `protobuf:"bytes,14,rep,name=images,proto3" json:"images,omitempty"`
	DescImages      []string                   `protobuf:"bytes,15,rep,name=descImages,proto3" json:"descImages,omitempty"`
	GoodsFrontImage string                     `protobuf:"bytes,16,opt,name=goodsFrontImage,proto3" json:"goodsFrontImage,omitempty"`
	IsNew           bool                       `protobuf:"varint,17,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot           bool                       `protobuf:"varint,18,opt,name=isHot,proto3" json:"isHot,omitempty"`
	OnSale          bool                       `protobuf:"varint,19,opt,name=onSale,proto3" json:"onSale,omitempty"`
	AddTime         int64                      `protobuf:"varint,20,opt,name=addTime,proto3" json:"addTime,omitempty"`
	Category        *CategoryBriefInfoResponse `protobuf:"bytes,21,opt,name=category,proto3" json:"category,omitempty"`
	Brand           *BrandInfoResponse         `protobuf:"bytes,22,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *GoodsInfoResponse) Reset() {
	*x = GoodsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfoResponse) ProtoMessage() {}

func (x *GoodsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfoResponse.ProtoReflect.Descriptor instead.
func (*GoodsInfoResponse) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{11}
}

func (x *GoodsInfoResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsInfoResponse) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GoodsInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsInfoResponse) GetGoodsSn() string {
	if x != nil {
		return x.GoodsSn
	}
	return ""
}

func (x *GoodsInfoResponse) GetClickNum() uint32 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *GoodsInfoResponse) GetSoldNum() uint32 {
	if x != nil {
		return x.SoldNum
	}
	return 0
}

func (x *GoodsInfoResponse) GetFavNum() uint32 {
	if x != nil {
		return x.FavNum
	}
	return 0
}

func (x *GoodsInfoResponse) GetMarketPrice() float32 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *GoodsInfoResponse) GetShopPrice() float32 {
	if x != nil {
		return x.ShopPrice
	}
	return 0
}

func (x *GoodsInfoResponse) GetGoodsBrief() string {
	if x != nil {
		return x.GoodsBrief
	}
	return ""
}

func (x *GoodsInfoResponse) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *GoodsInfoResponse) GetShipFree() bool {
	if x != nil {
		return x.ShipFree
	}
	return false
}

func (x *GoodsInfoResponse) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GoodsInfoResponse) GetDescImages() []string {
	if x != nil {
		return x.DescImages
	}
	return nil
}

func (x *GoodsInfoResponse) GetGoodsFrontImage() string {
	if x != nil {
		return x.GoodsFrontImage
	}
	return ""
}

func (x *GoodsInfoResponse) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *GoodsInfoResponse) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *GoodsInfoResponse) GetOnSale() bool {
	if x != nil {
		return x.OnSale
	}
	return false
}

func (x *GoodsInfoResponse) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *GoodsInfoResponse) GetCategory() *CategoryBriefInfoResponse {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *GoodsInfoResponse) GetBrand() *BrandInfoResponse {
	if x != nil {
		return x.Brand
	}
	return nil
}

type GoodsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*GoodsInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GoodsListResponse) Reset() {
	*x = GoodsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsListResponse) ProtoMessage() {}

func (x *GoodsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsListResponse.ProtoReflect.Descriptor instead.
func (*GoodsListResponse) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{12}
}

func (x *GoodsListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GoodsListResponse) GetData() []*GoodsInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_goods_proto protoreflect.FileDescriptor

var file_goods_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x67, 0x65, 0x50, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x70, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x22, 0x0a, 0x10,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x21, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x19, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42,
	0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x54, 0x61, 0x62, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe1, 0x03, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e,
	0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x53, 0x61,
	0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x75,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x22, 0x66,
	0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x9a, 0x02, 0x0a, 0x12, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x73, 0x4e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65,
	0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x22, 0xfb, 0x04, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x76, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66,
	0x61, 0x76, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f,
	0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x22, 0x51, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x32, 0xb4, 0x02, 0x0a, 0x05, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x34,
	0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x11, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x12, 0x10, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x06, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goods_proto_rawDescOnce sync.Once
	file_goods_proto_rawDescData = file_goods_proto_rawDesc
)

func file_goods_proto_rawDescGZIP() []byte {
	file_goods_proto_rawDescOnce.Do(func() {
		file_goods_proto_rawDescData = protoimpl.X.CompressGZIP(file_goods_proto_rawDescData)
	})
	return file_goods_proto_rawDescData
}

var file_goods_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_goods_proto_goTypes = []interface{}{
	(*QueryCategoryRequest)(nil),      // 0: QueryCategoryRequest
	(*FilterRequest)(nil),             // 1: FilterRequest
	(*BatchGoodsIdInfo)(nil),          // 2: BatchGoodsIdInfo
	(*DeleteGoodsInfo)(nil),           // 3: DeleteGoodsInfo
	(*CategoryBriefInfoResponse)(nil), // 4: CategoryBriefInfoResponse
	(*CategoryFilterRequest)(nil),     // 5: CategoryFilterRequest
	(*GoodInfoRequest)(nil),           // 6: GoodInfoRequest
	(*CreateGoodsInfo)(nil),           // 7: CreateGoodsInfo
	(*GoodsReduceRequest)(nil),        // 8: GoodsReduceRequest
	(*BatchCategoryInfoRequest)(nil),  // 9: BatchCategoryInfoRequest
	(*GoodsFilterRequest)(nil),        // 10: GoodsFilterRequest
	(*GoodsInfoResponse)(nil),         // 11: GoodsInfoResponse
	(*GoodsListResponse)(nil),         // 12: GoodsListResponse
	(*BrandInfoResponse)(nil),         // 13: BrandInfoResponse
	(*Empty)(nil),                     // 14: Empty
}
var file_goods_proto_depIdxs = []int32{
	4,  // 0: GoodsInfoResponse.category:type_name -> CategoryBriefInfoResponse
	13, // 1: GoodsInfoResponse.brand:type_name -> BrandInfoResponse
	11, // 2: GoodsListResponse.data:type_name -> GoodsInfoResponse
	10, // 3: Goods.GoodsList:input_type -> GoodsFilterRequest
	2,  // 4: Goods.BatchGetGoods:input_type -> BatchGoodsIdInfo
	7,  // 5: Goods.CreateGoods:input_type -> CreateGoodsInfo
	3,  // 6: Goods.DeleteGoods:input_type -> DeleteGoodsInfo
	7,  // 7: Goods.UpdateGoods:input_type -> CreateGoodsInfo
	6,  // 8: Goods.GetGoodsDetail:input_type -> GoodInfoRequest
	12, // 9: Goods.GoodsList:output_type -> GoodsListResponse
	12, // 10: Goods.BatchGetGoods:output_type -> GoodsListResponse
	11, // 11: Goods.CreateGoods:output_type -> GoodsInfoResponse
	14, // 12: Goods.DeleteGoods:output_type -> Empty
	14, // 13: Goods.UpdateGoods:output_type -> Empty
	11, // 14: Goods.GetGoodsDetail:output_type -> GoodsInfoResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_goods_proto_init() }
func file_goods_proto_init() {
	if File_goods_proto != nil {
		return
	}
	file_base_proto_init()
	file_brands_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_goods_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGoodsIdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGoodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryBriefInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsReduceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCategoryInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goods_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goods_proto_goTypes,
		DependencyIndexes: file_goods_proto_depIdxs,
		MessageInfos:      file_goods_proto_msgTypes,
	}.Build()
	File_goods_proto = out.File
	file_goods_proto_rawDesc = nil
	file_goods_proto_goTypes = nil
	file_goods_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoodsClient is the client API for Goods service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoodsClient interface {
	//商品接口
	GoodsList(ctx context.Context, in *GoodsFilterRequest, opts ...grpc.CallOption) (*GoodsListResponse, error)
	//现在用户提交订单有多个商品，你得批量查询商品的信息吧
	BatchGetGoods(ctx context.Context, in *BatchGoodsIdInfo, opts ...grpc.CallOption) (*GoodsListResponse, error)
	CreateGoods(ctx context.Context, in *CreateGoodsInfo, opts ...grpc.CallOption) (*GoodsInfoResponse, error)
	DeleteGoods(ctx context.Context, in *DeleteGoodsInfo, opts ...grpc.CallOption) (*Empty, error)
	UpdateGoods(ctx context.Context, in *CreateGoodsInfo, opts ...grpc.CallOption) (*Empty, error)
	GetGoodsDetail(ctx context.Context, in *GoodInfoRequest, opts ...grpc.CallOption) (*GoodsInfoResponse, error)
}

type goodsClient struct {
	cc grpc.ClientConnInterface
}

func NewGoodsClient(cc grpc.ClientConnInterface) GoodsClient {
	return &goodsClient{cc}
}

func (c *goodsClient) GoodsList(ctx context.Context, in *GoodsFilterRequest, opts ...grpc.CallOption) (*GoodsListResponse, error) {
	out := new(GoodsListResponse)
	err := c.cc.Invoke(ctx, "/Goods/GoodsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) BatchGetGoods(ctx context.Context, in *BatchGoodsIdInfo, opts ...grpc.CallOption) (*GoodsListResponse, error) {
	out := new(GoodsListResponse)
	err := c.cc.Invoke(ctx, "/Goods/BatchGetGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) CreateGoods(ctx context.Context, in *CreateGoodsInfo, opts ...grpc.CallOption) (*GoodsInfoResponse, error) {
	out := new(GoodsInfoResponse)
	err := c.cc.Invoke(ctx, "/Goods/CreateGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) DeleteGoods(ctx context.Context, in *DeleteGoodsInfo, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Goods/DeleteGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) UpdateGoods(ctx context.Context, in *CreateGoodsInfo, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Goods/UpdateGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) GetGoodsDetail(ctx context.Context, in *GoodInfoRequest, opts ...grpc.CallOption) (*GoodsInfoResponse, error) {
	out := new(GoodsInfoResponse)
	err := c.cc.Invoke(ctx, "/Goods/GetGoodsDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodsServer is the server API for Goods service.
type GoodsServer interface {
	//商品接口
	GoodsList(context.Context, *GoodsFilterRequest) (*GoodsListResponse, error)
	//现在用户提交订单有多个商品，你得批量查询商品的信息吧
	BatchGetGoods(context.Context, *BatchGoodsIdInfo) (*GoodsListResponse, error)
	CreateGoods(context.Context, *CreateGoodsInfo) (*GoodsInfoResponse, error)
	DeleteGoods(context.Context, *DeleteGoodsInfo) (*Empty, error)
	UpdateGoods(context.Context, *CreateGoodsInfo) (*Empty, error)
	GetGoodsDetail(context.Context, *GoodInfoRequest) (*GoodsInfoResponse, error)
}

// UnimplementedGoodsServer can be embedded to have forward compatible implementations.
type UnimplementedGoodsServer struct {
}

func (*UnimplementedGoodsServer) GoodsList(context.Context, *GoodsFilterRequest) (*GoodsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GoodsList not implemented")
}
func (*UnimplementedGoodsServer) BatchGetGoods(context.Context, *BatchGoodsIdInfo) (*GoodsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGetGoods not implemented")
}
func (*UnimplementedGoodsServer) CreateGoods(context.Context, *CreateGoodsInfo) (*GoodsInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGoods not implemented")
}
func (*UnimplementedGoodsServer) DeleteGoods(context.Context, *DeleteGoodsInfo) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGoods not implemented")
}
func (*UnimplementedGoodsServer) UpdateGoods(context.Context, *CreateGoodsInfo) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGoods not implemented")
}
func (*UnimplementedGoodsServer) GetGoodsDetail(context.Context, *GoodInfoRequest) (*GoodsInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGoodsDetail not implemented")
}

func RegisterGoodsServer(s *grpc.Server, srv GoodsServer) {
	s.RegisterService(&_Goods_serviceDesc, srv)
}

func _Goods_GoodsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoodsFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).GoodsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/GoodsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).GoodsList(ctx, req.(*GoodsFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_BatchGetGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGoodsIdInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).BatchGetGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/BatchGetGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).BatchGetGoods(ctx, req.(*BatchGoodsIdInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_CreateGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGoodsInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).CreateGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/CreateGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).CreateGoods(ctx, req.(*CreateGoodsInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_DeleteGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGoodsInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).DeleteGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/DeleteGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).DeleteGoods(ctx, req.(*DeleteGoodsInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_UpdateGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGoodsInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).UpdateGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/UpdateGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).UpdateGoods(ctx, req.(*CreateGoodsInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_GetGoodsDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoodInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).GetGoodsDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/GetGoodsDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).GetGoodsDetail(ctx, req.(*GoodInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Goods_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Goods",
	HandlerType: (*GoodsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GoodsList",
			Handler:    _Goods_GoodsList_Handler,
		},
		{
			MethodName: "BatchGetGoods",
			Handler:    _Goods_BatchGetGoods_Handler,
		},
		{
			MethodName: "CreateGoods",
			Handler:    _Goods_CreateGoods_Handler,
		},
		{
			MethodName: "DeleteGoods",
			Handler:    _Goods_DeleteGoods_Handler,
		},
		{
			MethodName: "UpdateGoods",
			Handler:    _Goods_UpdateGoods_Handler,
		},
		{
			MethodName: "GetGoodsDetail",
			Handler:    _Goods_GetGoodsDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goods.proto",
}
